name: "[Blocking] Build"
on:
  push:
    branches:
      - main
      - release-*
    tags:
      - v*
    paths-ignore:
      - "**.md"
      - "website/**"
      - "docs/**"
      - "demo/**"
  pull_request:
    branches:
      - main
      - release-*
    paths-ignore:
      - "**.md"
      - "website/**"
      - "docs/**"
      - "demo/**"
  workflow_dispatch:

env:
  TRIVY_VERSION: 0.59.1
  BUILDKIT_VERSION: 0.19.0
  TRIVY_DISABLE_VEX_NOTICE: "true"

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.3.1
        with:
          egress-policy: audit
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "1.24"
          check-latest: true
      - name: Build copa
        shell: bash
        run: |
          make build
          make archive
      - name: Upload copa to build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: copa_edge_linux_amd64.tar.gz
          path: dist/linux_amd64/release/copa_edge_linux_amd64.tar.gz
      - name: Load test cases for patch testing
        id: load-test-envs-matrix
        shell: bash
        run: echo "buildkitenvs=$(.github/workflows/scripts/buildkit-env-matrix.sh)" | tee -a "${GITHUB_OUTPUT}"
    outputs:
      buildkitenvs: ${{ steps.load-test-envs-matrix.outputs.buildkitenvs }}

  test-push:
    needs: build
    name: Test push to GHCR
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "1.24"
          check-latest: true
      # Login to GHCR
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install oras CLI
        uses: oras-project/setup-oras@5c0b487ce3fe0ce3ab0d034e63669e426e294e4d # v1.2.2
      - name: Install required tools
        shell: bash
        run: .github/workflows/scripts/download-tooling.sh
      - name: Download copa from build artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: copa_edge_linux_amd64.tar.gz
      - name: Extract copa
        shell: bash
        run: |
          tar xzf copa_edge_linux_amd64.tar.gz
          ./copa --version
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Run e2e tests pushing to GHCR
        shell: bash
        env:
          COPA_E2E_RUN_ID: ${{ github.run_id }}
        run: |
          set -eu -o pipefail
          . .github/workflows/scripts/buildkitenvs/direct/tcp
          go test -v ./test/e2e/push --addr="${COPA_BUILDKIT_ADDR}" --copa="$(pwd)/copa" --ghcr-base-path="ghcr.io/robert-cronin/copacetic/e2e-push-test" --run-id="${COPA_E2E_RUN_ID}"
